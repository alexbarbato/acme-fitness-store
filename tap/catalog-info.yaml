---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: fitness-store
  description: ACME Fitness Online Store
spec:
  owner: acme-fitness-team
  domain: cloud-apps
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: acme-cart
  description: ACME Fitness Store Cart Service
  tags:
    - java
    - spring
    - web
    - tanzu
  annotations:
    'backstage.io/kubernetes-label-selector': 'app.kubernetes.io/part-of=acme-cart'
spec:
  type: service
  lifecycle: production
  owner: acme-fitness-team
  system: fitness-store
  providesApis:
    - api:cart-api
  dependsOn:
    - resource:cart-cache
---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: cart-cache
  description: Cache for the cart
spec:
  type: cache
  owner: acme-fitness-team
  system: fitness-store
  dependencyOf:
  - component:acme-cart
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: cart-api
  description: Provide the cart service
spec:
  type: openapi
  lifecycle: production
  owner: acme-fitness-team
  system: fitness-store
  definition: |
    openapi: 3.0.0
    info:
      title: Cart
      version: v0.1.0
      license:
        name: MIT
        url: 'https://github.com/vmwarecloudadvocacy/cart/blob/master/LICENSE'
      contact:
        name: VMware Cloud Advocacy team
        url: 'https://github.com/vmwarecloudadvocacy'
      description: |
        This is the REST API documentation for the [Cart](https://github.com/vmwarecloudadvocacy/cart) Service app of the [ACME Fitness Shop](https://github.com/vmwarecloudadvocacy/acme_fitness_demo).
    servers:
      - url: 'http://localhost:5000'
    paths:
      '/cart/total/{userid}':
        parameters:
          - type: string
            name: userid
            in: path
            required: true
        get:
          summary: Get Cart Total
          tags: []
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      carttotal:
                        type: number
                      userid:
                        type: string
                  examples:
                    sample:
                      value:
                        carttotal: 804.5
                        userid: dan
          operationId: get_cart_total
          description: Get total amount in users cart
      '/cart/item/modify/{userid}':
        parameters:
          - type: string
            name: userid
            in: path
            required: true
        post:
          summary: Modify Cart Item
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      userid:
                        type: string
                  examples:
                    sample:
                      value:
                        userid: dan
          operationId: post_modify_cart_item
          description: Update an item in the cart of a user
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    itemid:
                      type: string
                    quantity:
                      type: integer
                examples:
                  sample:
                    value:
                      itemid: sfsdsda3343
                      quantity: 2
            description: Cart item payload
      '/cart/modify/{userid}':
        parameters:
          - type: string
            name: userid
            in: path
            required: true
        post:
          summary: Modify Cart
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      userid:
                        type: string
                  examples:
                    sample:
                      value:
                        userid: dan
          operationId: post_modify_cart
          description: Modify the contents of a cart
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    cart:
                      type: array
                      items:
                        type: object
                        properties:
                          description:
                            type: string
                          itemid:
                            type: string
                          price:
                            type: number
                          quantity:
                            type: integer
                    userid:
                      type: string
                examples:
                  sample:
                    value:
                      cart:
                        - description: fitband for any age - even babies
                          itemid: sdfsdfsfs
                          name: fitband
                          price: 4.5
                          quantity: 1
                        - description: the most awesome redpants in the world
                          itemid: sfsdsda3343
                          name: redpant
                          price: 400
                          quantity: 1
                      userid: dan
            description: Modify cart payload
      '/cart/item/add/{userid}':
        parameters:
          - type: string
            name: userid
            in: path
            required: true
        post:
          summary: Add Item
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      userid:
                        type: string
                  examples:
                    sample:
                      value:
                        userid: shri
          operationId: post_add_item
          description: Add item to cart
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    itemid:
                      type: string
                    quantity:
                      type: integer
                examples:
                  sample:
                    value:
                      itemid: xyz
                      quantity: 3
            description: Add item payload
      '/cart/items/total/{userid}':
        parameters:
          - type: string
            name: userid
            in: path
            required: true
        get:
          summary: Get Cart Items
          tags: []
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      cartitemtotal:
                        type: integer
                      userid:
                        type: string
                  examples:
                    sample:
                      value:
                        cartitemtotal: 5
                        userid: shri
          operationId: get_cart_items
          description: Get the total number of items in a cart
      '/cart/clear/{userid}':
        parameters:
          - type: string
            name: userid
            in: path
            required: true
        get:
          summary: Clear Cart Items
          tags: []
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties: {}
                  examples: {}
          operationId: get_clear_cart
          description: Clear all items from the cart
      '/cart/items/{userid}':
        parameters:
          - type: string
            name: userid
            in: path
            required: true
        get:
          summary: Get All Cart Items
          tags: []
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      cart:
                        type: array
                        items:
                          type: object
                          properties:
                            description:
                              type: string
                            itemid:
                              type: string
                            name:
                              type: string
                            quantity:
                              type: integer
                            price:
                              type: number
                      userid:
                        type: string
                  examples:
                    sample:
                      value:
                        cart:
                          - description: fitband for any age - even babies
                            itemid: sdfsdfsfs
                            name: fitband
                            price: 4.5
                            quantity: 1
                          - description: the most awesome redpants in the world
                            itemid: sfsdsda3343
                            name: redpant
                            price: 400
                            quantity: 1
                        userid: dan
          operationId: get_cart_items
          description: Get all items in a cart
      /cart/all:
        get:
          summary: Get All Carts
          tags: []
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      all_carts:
                        type: array
                        items:
                          type: object
                          properties:
                            cart:
                              type: object
                              properties:
                                description:
                                  type: string
                                itemid:
                                  type: string
                                price:
                                  type: number
                                quantity:
                                  type: integer
                            userid:
                              type: string
                  examples:
                    sample:
                      value:
                        all carts:
                          - cart:
                              - description: fitband for any age - even babies
                                itemid: sdfsdfsfs
                                name: fitband
                                price: 4.5
                                quantity: 1
                              - description: the most awesome redpants in the world
                                itemid: sfsdsda3343
                                name: redpant
                                price: 400
                                quantity: 1
                            id: shri
                          - cart:
                              - description: fitband for any age - even babies
                                itemid: sdfsdfsfs
                                name: fitband
                                price: 4.5
                                quantity: 1
                              - description: the most awesome redpants in the world
                                itemid: sfsdsda3343
                                name: redpant
                                price: 400
                                quantity: 1
                            id: dan
          description: Get all the carts
          operationId: get_all_carts
    components:
      schemas: {}
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: acme-catalog
  description: ACME Fitness Store Catalog Service
  tags:
    - java
    - spring
    - web
    - tanzu
  annotations:
    'backstage.io/kubernetes-label-selector': 'app.kubernetes.io/part-of=acme-catalog'
spec:
  type: service
  lifecycle: production
  owner: acme-fitness-team
  system: fitness-store
  providesApis:
    - api:catalog-api
  dependsOn:
    - resource:catalog-database
---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: catalog-database
  description: Database for the catalog
spec:
  type: database
  owner: acme-fitness-team
  system: fitness-store
  dependencyOf:
  - component:acme-catalog
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: catalog-api
  description: Provide the catalog service
spec:
  type: openapi
  lifecycle: production
  owner: acme-fitness-team
  system: fitness-store
  definition: |
    openapi: 3.0.0
    info:
      title: Catalog
      version: v0.1.0
      license:
        name: MIT
        url: 'https://github.com/vmwarecloudadvocacy/cart/blob/master/LICENSE'
      contact:
        name: VMware Cloud Advocacy team
        url: 'https://github.com/vmwarecloudadvocacy'
      description: |
        This is the Placeholder REST API documentation for the [Catalog](https://github.com/vmwarecloudadvocacy/cart) Service app of the [ACME Fitness Shop](https://github.com/vmwarecloudadvocacy/acme_fitness_demo).
    servers:
      - url: 'http://localhost:5000'
    paths:
      '/cart/total/{userid}':
        parameters:
          - type: string
            name: userid
            in: path
            required: true
        get:
          summary: Get Cart Total
          tags: []
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      carttotal:
                        type: number
                      userid:
                        type: string
                  examples:
                    sample:
                      value:
                        carttotal: 804.5
                        userid: dan
          operationId: get_cart_total
          description: Get total amount in users cart
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: acme-identity
  description: ACME Fitness Store Identity Service
  tags:
    - java
    - spring
    - tanzu
  annotations:
    'backstage.io/kubernetes-label-selector': 'app.kubernetes.io/part-of=acme-identity'
spec:
  type: service
  lifecycle: production
  owner: acme-fitness-team
  system: fitness-store  
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: acme-order
  description: ACME Fitness Store  Order Service
  tags:
    - tanzu
  annotations:
    'backstage.io/kubernetes-label-selector': 'app.kubernetes.io/part-of=acme-order'
spec:
  type: service
  lifecycle: production
  owner: acme-fitness-team
  system: fitness-store
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: acme-payment
  description: ACME Fitness Store Payment Service
  tags:
    - java
    - spring
    - tanzu
  annotations:
    'backstage.io/kubernetes-label-selector': 'app.kubernetes.io/part-of=acme-payment'
spec:
  type: service
  lifecycle: production
  owner: acme-fitness-team
  system: fitness-store
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: acme-shopping
  description: ACME Fitness Store Shopping Service
  tags:
    - tanzu
  annotations:
    'backstage.io/kubernetes-label-selector': 'app.kubernetes.io/part-of=acme-shopping'
spec:
  type: service
  lifecycle: production
  owner: acme-fitness-team
  system: fitness-store
  consumesApis:
    - api:catalog-api
    - api:cart-api
